<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 配置数据源,Hibernate数据库连接配置 -->
	<bean id="center_dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="1000" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="30000" />
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="30" />
			
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="${center.jdbc.url}" />
        <property name="username" value="${center.jdbc.username}" />
        <property name="password" value="${center.jdbc.password}" />
	</bean>
	

    <!-- 配置session factory，hibernate4 直接改为localsession，也是从上面的配置文件读取 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="center_dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.hibernate.connection.SetBigStringTryClob">true</prop>
                <prop key="hibernate.hibernate.archive.autodetection">class</prop>
                <prop key="hibernate.hibernate.connection.charSet">UTF-8</prop>
                <prop key="hibernate.hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>

            </props>
        </property>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.gee.entity</value>
            </list>
        </property>
    </bean>
    
    
     <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 配置事务的传播特性 事物通知 -->
    <!-- rollback-for回滚事物，果存在一个事务，则支持当前事务。如果没有事务则开启 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="edit*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="modify*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="execute*" propagation="REQUIRED"
                       rollback-for="java.lang.Exception" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="query*" propagation="REQUIRED" read-only="true" />
            <tx:method name="search*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="service"
                      expression="(execution(* com.gee.dao..*.*(..)))" />
        <!-- 关键配置，切换数据源一定要比持久层代码更先执行（事务也算持久层代码） -->
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="service"/>

    </aop:config>


</beans>